#!/bin/bash
#This script spins up an rsyslog server

yum -y update && yum -y install rsyslog
systemctl start rsyslog
systemctl enable rsyslog

#don't need this in the automation because there is no one on the other end to see the status
#systemctl status rsyslog

cp /etc/rsyslog.conf /etc/rsyslog.bak

#wouldn't need to do this for automation
#vim /etc/rsyslog.conf - we are doing it so we can manually edit the following sed lines

sed -i 's /#$UDPServerRun 514/$UDPServerRun 514/g' /etc/rsyslog.conf
sed -i 's /#$InputTCPServerRun 514/$InputTCPServerRun 514/g' /etc/rsyslog.conf
sed -i 's /#$ModLoad imudp/$ModLoad imudp/g' /etc/rsyslog.conf
sed -i 's /#$ModLoad imtcp/$ModLoad imtcp/g' /etc/rsyslog.conf

#*.* ?RemoteLogs 
#& ~

systemctl restart rsyslog
#systemctl status rsyslog -  nobody is looking

#client automation
yum -y update && yum -y install rsyslog
systemctl start rsyslog
systemctl enable rsyslog
cp /etc/rsyslog.conf /etc/rsyslog.bak

#needs to be the name of the client rsyslog server
echo "*.*  @@rsyslog:514" >> /etc/rsyslog.conf
systemctl restart rsyslog
systemctl enable rsyslog

#use the following to check to see that the client is logging onto the rsyslog server
#tail -F var/log/messages 
#echo "some text | logger"
